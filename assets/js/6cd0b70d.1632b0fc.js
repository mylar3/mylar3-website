"use strict";(self.webpackChunkmylar_3_website=self.webpackChunkmylar_3_website||[]).push([[7064],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>k});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),d=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=d(r),u=a,k=c["".concat(p,".").concat(u)]||c[u]||m[u]||i;return r?n.createElement(k,o(o({ref:t},s),{},{components:r})):n.createElement(k,o({ref:t},s))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},371:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=r(7462),a=(r(7294),r(3905));const i={},o="[API] addProvider",l={unversionedId:"api/addprovider",id:"api/addprovider",title:"[API] addProvider",description:"action:  will add a provider (`name`) into the provider list.",source:"@site/docs/api/addprovider.md",sourceDirName:"api",slug:"/api/addprovider",permalink:"/docs/api/addprovider",draft:!1,editUrl:"https://github.com/${organizationName}/${projectName}/tree/main/docs/api/addprovider.md",tags:[],version:"current",frontMatter:{}},p={},d=[],s={toc:d},c="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"api-addprovider"},"[API]"," addProvider"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"action"),":  will add a provider (",(0,a.kt)("inlineCode",{parentName:"p"},"name"),") into the provider list."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"restrictions"),": ",(0,a.kt)("em",{parentName:"p"},"Optional")," arguments do not need to part of the call"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"arguments (",(0,a.kt)("em",{parentName:"strong"},"required"),")"),": "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"providertype")," --\x3e ",(0,a.kt)("inlineCode",{parentName:"li"},"newznab")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"torznab")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"host")," "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"apikey"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"arguments (",(0,a.kt)("em",{parentName:"strong"},"optional"),")"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"uid")," --\x3e is only required for rss utilisation on some indexers."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"categories")," --\x3e default is ",(0,a.kt)("inlineCode",{parentName:"li"},"7030")," for comics. If requiring multiple categories can be separated by commas."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"enabled")," --\x3e default is ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),". Acceptable values are: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," (as per example call, can also be ",(0,a.kt)("inlineCode",{parentName:"li"},"enabled")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"disabled"),")")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"response Type"),": json"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"example call"),": "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"http://localhost:8090/api?cmd=addProvider&providertype=newznab&name=MySite&host=https://test.site.com&prov_apikey=something&uid=3711&enabled&apikey=<apikey>")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"example response"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-JSON"},'{\n  "success": true,\n  "data": "Successfully added newznab provider MySite to the provider list [prov_id: 6]"\n}\n')))}m.isMDXComponent=!0}}]);