"use strict";(self.webpackChunkmylar_3_website=self.webpackChunkmylar_3_website||[]).push([[152],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),m=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=m(n),u=r,k=d["".concat(l,".").concat(u)]||d[u]||c[u]||i;return n?a.createElement(k,o(o({ref:t},s),{},{components:n})):a.createElement(k,o({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[d]="string"==typeof e?e:r,o[1]=p;for(var m=2;m<i;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5775:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const i={},o="[API] changeProvider",p={unversionedId:"api/changeprovider",id:"api/changeprovider",title:"[API] changeProvider",description:"action:  will change any provided values for an existing provider (`name` or `prov_id`).",source:"@site/docs/api/changeprovider.md",sourceDirName:"api",slug:"/api/changeprovider",permalink:"/docs/api/changeprovider",draft:!1,editUrl:"https://github.com/${organizationName}/${projectName}/tree/main/docs/api/changeprovider.md",tags:[],version:"current",frontMatter:{}},l={},m=[],s={toc:m},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api-changeprovider"},"[API]"," changeProvider"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"action"),":  will change any provided values for an existing provider (",(0,r.kt)("inlineCode",{parentName:"p"},"name")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"prov_id"),")."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"restrictions"),": ",(0,r.kt)("em",{parentName:"p"},"Optional")," arguments do not need to part of the call but one ",(0,r.kt)("em",{parentName:"p"},"must")," be provided."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"arguments (",(0,r.kt)("em",{parentName:"strong"},"required"),")"),": "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"providertype")," --\x3e ",(0,r.kt)("inlineCode",{parentName:"li"},"newznab")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"torznab")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"prov_id")," (either/both may be supplied)")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"arguments (",(0,r.kt)("em",{parentName:"strong"},"optional"),")"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"altername")," --\x3e change the name of the provider from the ",(0,r.kt)("inlineCode",{parentName:"li"},"name")," value"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"host")," "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prov_apikey")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"uid")," --\x3e is only required for rss utilisation on some indexers."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"categories")," --\x3e If requiring multiple categories can be separated by commas."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"enabled")," --\x3e Enable provider. Acceptable values are: ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," or just the ",(0,r.kt)("inlineCode",{parentName:"li"},"enabled")," field"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"disabled")," --\x3e Disable provider. Acceptable values are: ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," or just the ",(0,r.kt)("inlineCode",{parentName:"li"},"disabled")," field")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"note: if ",(0,r.kt)("inlineCode",{parentName:"em"},"prov_id")," argument is used, ",(0,r.kt)("inlineCode",{parentName:"em"},"name")," can be used in lieu of ",(0,r.kt)("inlineCode",{parentName:"em"},"altername")," if desired.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"response Type"),": json"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"example calls"),":\n(using ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," control argument):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"change newznab entries of"),": name of newznab, host, prov_apikey, and disable:\n",(0,r.kt)("inlineCode",{parentName:"p"},"cmd=changeProvider&providertype=newznab&name=MySite&altername=MyCoolSite&host=https://testing.site.com&prov_apikey=something&disabled&apikey=<apikey>"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"change torznab entries of"),": host, categories, and enable:\n",(0,r.kt)("inlineCode",{parentName:"p"},"cmd=changeProvider&providertype=torznab&name=MySite&host=https://testing.site.com&categories=5000,7000&enabled=true&apikey=<apikey>")))),(0,r.kt)("p",null,"(using ",(0,r.kt)("inlineCode",{parentName:"p"},"prov_id")," argument):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"change newznab entries of"),": name of newznab, host, prov_apikey, and disable:\n",(0,r.kt)("inlineCode",{parentName:"p"},"cmd=changeProvider&providertype=newznab&prov_id=5&name=MyCoolSite&host=https://testing.site.com&prov_apikey=something&disabled&apikey=<apikey>"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"change torznab entries of"),": host, categories, and enable:\n",(0,r.kt)("inlineCode",{parentName:"p"},"cmd=changeProvider&providertype=torznab&prov_id=5&host=https://testing.site.com&categories=5000,7000&enabled=true&apikey=<apikey>")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"example response"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JSON"},"{\n  \"success\": true,\n  \"data\": \"Successfully changed ['name', 'host', 'prov_apikey', 'enabled'] for newznab provider MySite [prov_id: 5]\"\n}\n")))}c.isMDXComponent=!0}}]);