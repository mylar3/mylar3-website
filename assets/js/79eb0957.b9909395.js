"use strict";(self.webpackChunkmylar_3_website=self.webpackChunkmylar_3_website||[]).push([[6117],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return n?a.createElement(f,l(l({ref:t},u),{},{components:n})):a.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1395:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={},l="[API] getWanted",o={unversionedId:"api/getwanted",id:"api/getwanted",title:"[API] getWanted",description:"action: Display all the items that are in a Wanted status dependent on query type.",source:"@site/docs/api/getwanted.md",sourceDirName:"api",slug:"/api/getwanted",permalink:"/docs/api/getwanted",draft:!1,editUrl:"https://github.com/${organizationName}/${projectName}/tree/main/docs/api/getwanted.md",tags:[],version:"current",frontMatter:{}},s={},p=[],u={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api-getwanted"},"[API]"," getWanted"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"action"),": Display all the items that are in a Wanted status dependent on query type."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"restrictions"),": "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"action will be restricted based on options used.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"arguments optional"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"story_arcs")," --\x3e ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," / ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," --\x3e will include issues in story arcs that are Wanted")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Additional Information"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Not including the argument assumes a value of ",(0,r.kt)("inlineCode",{parentName:"li"},"false")),(0,r.kt)("li",{parentName:"ul"},"If no arguments are provided, issues and annuals will be returned"),(0,r.kt)("li",{parentName:"ul"},"Annual response is dependent on if Annual Integration is enabled.")),(0,r.kt)("p",null,"response Type: json"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"example call (with small response - more variables are present, just listing a few for examples):")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8090/api?cmd=getWanted&issues=True&apikey=<apikey>")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JSON"},'{\n  "success": true, \n  "data": {\n    "issues": [\n      {\n        "ComicID": "83838",\n        "IssueID": "891919",\n        "ComicName": "Damage",\n        "Issue_Number": "1"\n      }\n    ],\n  }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8090/api?cmd=getWanted&issues=True&annuals=True&apikey=<apikey>")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JSON"},'{\n  "success": true, \n  "data": {\n    "issues": [\n      {\n        "ComicID": "83838",\n        "IssueID": "891919",\n        "ComicName": "Damage",\n        "Issue_Number": "1"\n      }\n    ],\n    "annuals": [\n      {\n        "ComicID": "18191",\n        "IssueID": "828291",\n        "ComicName": "Damage Annual",\n        "Issue_Number": "1",\n        "SeriesName": "Damage",\n        "SeriesComicID": "83838"\n       }\n    ]\n  }\n}\n')))}m.isMDXComponent=!0}}]);